# This is a template file - DO NOT commit actual secrets to version control
# Use kubectl to create secrets from this template

apiVersion: v1
kind: Secret
metadata:
  name: audio-tai-loc-secrets
type: Opaque
stringData:
  database-url: "postgresql://username:password@postgres-service:5432/audio_tai_loc_prod"
  jwt-secret: "your-super-secure-jwt-secret-here"
  jwt-refresh-secret: "your-super-secure-refresh-secret-here"
  payos-client-id: "your-payos-client-id"
  payos-api-key: "your-payos-api-key"
  payos-partner-code: "your-payos-partner-code"
  payos-secret-key: "your-payos-secret-key"
  payos-webhook-secret: "your-payos-webhook-secret"
  redis-password: "your-redis-password"
  session-secret: "your-session-secret"

---
# Instructions for creating secrets:
# 
# 1. Create secrets from command line:
# kubectl create secret generic audio-tai-loc-secrets \
#   --from-literal=database-url="postgresql://user:pass@host:5432/db" \
#   --from-literal=jwt-secret="your-jwt-secret" \
#   --from-literal=jwt-refresh-secret="your-refresh-secret" \
#   --from-literal=payos-client-id="your-client-id" \
#   --from-literal=payos-api-key="your-api-key" \
#   --from-literal=payos-partner-code="your-partner-code" \
#   --from-literal=payos-secret-key="your-secret-key" \
#   --from-literal=payos-webhook-secret="your-webhook-secret"
#
# 2. Or use sealed-secrets for GitOps:
# echo -n 'your-secret-value' | kubectl create secret generic audio-tai-loc-secrets \
#   --dry-run=client --from-file=jwt-secret=/dev/stdin -o yaml | \
#   kubeseal -o yaml > sealed-secret.yaml
#
# 3. Or use external secret management (AWS Secrets Manager, HashiCorp Vault, etc.)

---
apiVersion: v1
kind: Secret
metadata:
  name: regcred
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: # Base64 encoded Docker registry credentials
  # Create with: kubectl create secret docker-registry regcred \
  #   --docker-server=your-registry-server \
  #   --docker-username=your-username \
  #   --docker-password=your-password \
  #   --docker-email=your-email
